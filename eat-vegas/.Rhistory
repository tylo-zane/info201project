if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
rand <- rnorm(1)
total <- total + 1
if (rand > -1 & rand < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(100)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
for (i in rnorm(1000)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
for (i in rnorm(10000)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
for (i in rnorm(100000000)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
for (i in rnorm(100000000)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
for (i in rnorm(100000000)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1000)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
Ex <- 0.628
counter <- 0
total <- 0
Xn <- 0
for (i in rnorm(1400)) {
total <- total + 1
if (i > -1 & i < 1) {
counter <- counter + 1
}
Xn <- counter / total
Xn
}
MyFirst <- c(3, 45, 56, 732)
MyFirstVector <- c(3, 45, 56, 732)
MyFirstVector <- c(3, 45, 56, 732)
MyFirstVector
is.numeric(MyFirstVector)
is.integer(MyFirstVector)
is.double(MyFirstVector)
V2 <- c(3L, 12L, 243L, 0L)
is.numeric(V2)
is.integer(V2)
is.double(V2)
V3 <- c("c", "B23", "Hello")
V3
is.character(V3)
is.numeric(V3)
V3 <- c("c", "B23", "Hello", 7)
V3
is.character(V3)
is.numeric(V3)
seq(1,15)
1:15
seq(1,15,2)
z <- seq(1, 15, 4)
z
rep(3, 50)
d <- rep(3, 50)
d <- rep(3, 50)
rep("a", 5)
x <- c(80, 20)
y <- rep(x, 10)
y
x <- c(1, 123, 534, 13, 4)   #combine
y <- seq(201, 250, 11)   #sequence
z <- rep("Hi!", 3)   #replicate
w <- c("a", "b", "c", "d", "e")
w
w[1]
w[2]
w[3]
w[-1]
w[-3]
v <- w[-3]
w[1:3]
v
w[3:5]
w[c(1,3,5)]
w[c(-2,-4)]
-3:-5
w[-3:-5]
w[1:2]
x <- c(50, 34, 111, 7, 24, 631, 20, 4, 7, 21)
y <- c(100, 2, 56, 12, 0, 65, 93, 10, 244, 1)
z <- x + y
z
x > y
x < y
x <- rnorm(5)
x
for(i in x) {
print(i)
}
print(x[1])
print(x[2])
print(x[5])
print(x[3])
print(x[4])
for (j in 1:5) {
print(x[j])
}
# De-vectorized approach
d <- rep(NA,N)
N <- 100
a <- rnorm(N)
b <- rnorm(N)
# De-vectorized approach
d <- rep(NA,N)
d <- rep(NA,N)
for(i in 1:N){
d[i] <- a[i] *b[i]
}
c <- a * b
N <- 1000000
a <- rnorm(N)
b <- rnorm(N)
c <- a * b
d <- rep(NA,N)
for(i in 1:N){
d[i] <- a[i] *b[i]
}
N <- 10000000
a <- rnorm(N)
b <- rnorm(N)
c <- a * b
d <- rep(NA,N)
for(i in 1:N){
d[i] <- a[i] *b[i]
}
# List of functions learned so far
?rnorm()
rnorm(5)
# List of functions learned so far
rnorm(5, 10, 8)
?seq()
seq(10, 20, 3)
getwd
getwd()
CompareLength <- function(vector1, vector2){
difference <- length(vector1) - length(vector2)
ans <- paste0("The difference in lengths is ", difference)
#return(difference)
}
CompareLength([0, 1, 2, 3, 4], [0, 1, 2])
CompareLength <- function(vector1, vector2){
difference <- length(vector1) - length(vector2)
ans <- paste0("The difference in lengths is ", difference)
return(ans)
}
a <- c(0, 1, 2, 3, 4)
b <- c(0, 1, 2)
CompareLength(a, b)
library("babynames", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
head(babynames)
tail(babynames)
head(babynames)
subset <- babynames[babynames$year == 1921 & babynames$sex == "F",]
subset
subset <- babynames[babynames$year == 1921 & babynames$sex == "M",]
subset
subset <- babynames[babynames$year == 1921 & babynames$sex == "M", babynames$name == "Justin"]
subset <- babynames[babynames$year == 1921 & babynames$sex == "M"]
subset <- babynames[babynames$year == 1921 & babynames$sex == "M",]
subset
subset <- babynames[babynames$name == "Justin", babynames$year == 1921 & babynames$sex == "M",]
subset <- babynames[babynames$year == 1921 & babynames$sex == "M",]
subset
subset <- babynames[babynames$year == 1921 & babynames$sex == "F",]
install.packages("tideverse")
install.packages("tidyverse")
install.packages("dplyr")
library(dplyr)
select(babynames, name, n)
head(select(babynames, name, sex))
head(filter(babynames, year==1998, sex=="M"))
min_rank(a)
a <- c("a", "d", "c", "b", "a")
min_rank(a)
dense_rank(a)
head(a)
a <- filter(babynames, year==1998, sex="M")
library(tidyverse)
library(dplyr)
a <- filter(babynames, year==1998, sex="M")
library(babynames)
a <- filter(babynames, year==1998, sex="M")
a
a <- filter(babynames, year==1998, sex="M")
a <- filter(babynames, year==1998, sex=="M")
a
subset <- babynames[babynames$year == 2005 & babynames$sex == "M",]
subset
head(filter(babynames, year==2005, sex=="M"))
head((filter(babynames, year==2005, sex=="M"))
head(filter(babynames, year==2005, sex=="M"))
head(babynames)
head(filter(babynames, year==2005, sex=="M"))
head(filter(babynames, year==2000, sex=="F", n<1000))
shiny::runApp('Documents/INFO201/info201project/eat-vegas')
getwd()
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
install.packages("shinythemes")
library(shinythemes)
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
install.packages("ECharts2Shiny")
install.packages("ndjson")
install.packages("wordcloud")
install.packages("tm")
install.packages("RColorBrewer")
library(ECharts2Shiny)
library(ndjson)
library(wordcloud)
library(tm)
library(RColorBrewer)
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
names(providerTileOptions())
providers$OpenInfraMap.Water
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
color_list <- list(1 = "#E80000", 1.5 = "#FF4D00", 2 = "#FF8A00", 2.5 = "#E80000", 3 = "#E80000", 3.5 = "#E80000", 4 = "#E80000", 4.5 = "#E80000", 5 = "#E80000")
color_list <- list("1" = "#E80000", "1.5" = "#FF4D00", "2" = "#FF8A00", "2.5" = "#E80000", "3" = "#E80000", "3.5" = "#E80000", "4" = "#E80000", "4.5" = "#E80000", "5" = "#E80000")
View(color_list)
print(color_list["3"])
color_list <- list("1" = "#E80000", "1.5" = "#FF4D00", "2" = "#FF8A00", "2.5" = "#E80000", "3" = "#E80jfdsfs00", "3.5" = "#E80000", "4" = "#E80000", "4.5" = "#E80000", "5" = "#E80000")
print(color_list["3"])
runApp('Documents/INFO201/info201project/eat-vegas')
source('~/Untitled.R')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
shiny::runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
runApp('Documents/INFO201/info201project/eat-vegas')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rating_color <- "white"
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/info201project/eat-vegas')
runApp('~/Desktop/info201project/eat-vegas')
runApp('~/Desktop/info201project/eat-vegas')
